resources:
- pipeline: plan   # Name of the pipeline resource
  source: Terraform DigitalOcean Plan # Name of the pipeline referenced by the pipeline resource
  trigger: 
    branches:
    - master

queue:
  name: Default

trigger:
  - master
  
steps:
- checkout: none  
- powershell: |
   if (Test-path '.\do-plan') 
   { 
      Remove-Item -Path .\do-plan â€“recurse
   }
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Clean directory'

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Artifacts'
  inputs:
    buildType: specific
    project: '3621f7b5-b428-4cfb-92bc-528c4430aec4'
    pipeline: 31
    specificBuildWithTriggering: true
    artifactName: 'do-plan'
    downloadPath: '$(System.DefaultWorkingDirectory)'

- powershell: |
   terraform apply ".\terraform.tfplan"
  workingDirectory: '$(System.DefaultWorkingDirectory)/do-plan'
  displayName: 'Apply'

- powershell: |
   $output = terraform output "raw_config"
   $file = new-item "kuberconfig.yaml" -type file
   Set-content $file -value $output
  workingDirectory: '$(System.DefaultWorkingDirectory)/do-plan'
  displayName: 'Get Output'

- task: CopyFiles@2
  displayName: 'Copy Kubernetes Deployment config to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: |
    .\do-plan\**\*
    flattenFolders: false
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: do-apply'
  inputs:
    ArtifactName: 'do-apply'
